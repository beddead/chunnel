# top-most EditorConfig file (такая пометка должна быть только у главного .editorconfig файла в корне)
root = true

### Code files
# Я использую такую маску [*.cs,*.csx,*.vb,*.vbx,*.xaml], но оставил ту, которая была
[*]
# Use tabs to indent the start of the line, one tab per indent level, and let everyone pick how wide they want that to be.
# indent_style=tab

# Use spaces if you're lining up characters within a line, so they always line up regardless of tab size.
indent_style=space

# recommended value of indent size
indent_size=2

# tab width same as indent size
tab_width=2

### .NET formatting settings:
[*.{cs,vb}]

# Sort System.* usings alphabetically and place them before other usings.
dotnet_sort_system_directives_first=true

### .NET code style settings: 
[*.{cs,vb}]

# removing .this when not needed
dotnet_style_qualification_for_property=false:suggestion
dotnet_style_qualification_for_method=false:suggestion
dotnet_style_qualification_for_event=false:suggestion

# using int instead of Int32
dotnet_style_predefined_type_for_locals_parameters_members=true:suggestion
dotnet_style_predefined_type_for_member_access=true:suggestion

# prefer to use initializers
dotnet_style_object_initializer=true:suggestion
dotnet_style_collection_initializer=true:suggestion

# prefer null coalescing expression to ternary operator checking
dotnet_style_coalesce_expression=true:suggestion

# prefer to use null-conditional operator where possible
dotnet_style_null_propagation=true:suggestion



### CSharp code style settings:
[*.cs]
# prefer var is used for built-in system types such as int
csharp_style_var_for_built_in_types=false:silent

# prefer var when the type is already mentioned on the right-hand side of a declaration expression
csharp_style_var_when_type_is_apparent=true:suggestion

# prefer var in all cases unless overridden by another code style rule
csharp_style_var_elsewhere=true:suggestion

# Prefer expression-bodied members for constructors
csharp_style_expression_bodied_constructors=true:none

# prefer expression-bodied members for methods
csharp_style_expression_bodied_methods=false:none

# prefer expression-bodied members for operators
csharp_style_expression_bodied_operators=false:none

# prefer expression-bodied members for properties
csharp_style_expression_bodied_properties=false:silent

# prefer expression-bodied members for indexers
csharp_style_expression_bodied_indexers=true:suggestion

# prefer expression-bodied members for accessors
csharp_style_expression_bodied_accessors=false:silent

# prefer pattern matching instead of is expressions with type casts
csharp_style_pattern_matching_over_is_with_cast_check=true:suggestion

# prefer pattern matching instead of as expressions with null checks to determine if something is of a particular type
csharp_style_pattern_matching_over_as_with_null_check=true:suggestion

# prefer out variables to be declared inline when possible
csharp_style_inlined_variable_declaration=true:suggestion

# prefer default over default(T)
csharp_prefer_simple_default_expression=true:suggestion

# prefer to use throw expressions instead of throw statements
csharp_style_throw_expression=true:suggestion

# prefer to use conditional coalescing operation (?.) when invoking a lambda instead of performing a null check
csharp_style_conditional_delegate_call=true:suggestion

# prefer no braces when possible
csharp_prefer_braces=false:none

### CSharp formatting settings:
[*.cs]
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_within_query_expression_clauses = true

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = false

csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# А вот с этим пока не разобрался, надо документация изучать.
### .NET naming conventions:

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = none

# [*.{cs,vb}]

#dotnet_naming_rule.async_methods_end_in_async.symbols  = any_async_methods
#dotnet_naming_rule.async_methods_end_in_async.style    = end_in_async
#dotnet_naming_rule.async_methods_end_in_async.severity = suggestion

#dotnet_naming_symbols.any_async_methods.applicable_kinds           = method
#dotnet_naming_symbols.any_async_methods.applicable_accessibilities = *
#dotnet_naming_symbols.any_async_methods.required_modifiers         = async

#dotnet_naming_style.end_in_async.required_suffix = Async
#dotnet_naming_style.end_in_async.capitalization  = pascal_case